/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package SAAT.rulemarker.gui;

import SAAT.rulemarker.EvaluationEntry;
import SAAT.rulemarker.RuleMarkerEntryStorage;
import java.awt.Color;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.AbstractDocument;
import javax.swing.text.BadLocationException;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import javax.swing.text.StyledEditorKit;
import SAAT.textmining.DiseaseEntry;
import SAAT.textmining.staging.ParserStagingT;

/**
 *
 * @author Robert
 */
public class QuerySearch extends javax.swing.JPanel {

    private ArrayList tabel_id_selection_ = new ArrayList();
    private AbstractDocument doc_;
    private RuleMarkerEntryStorage rmestore_;
    private DiseaseEntry de_;
    private EvaluationEntry ee_ = null;
    private QueryWindow query_window_ = null;
    private ArrayList<DiseaseEntry> disease_entrys_ = null;

    /**
     * Creates new form QuerySearch
     */
    public QuerySearch() {
        initComponents();
        tabel_id_selection_.add("Finding ID");
        tabel_id_selection_.add("Diseas ID");
        StyledDocument styledDoc = jTextPane1.getStyledDocument();
        if (styledDoc instanceof AbstractDocument) {
            doc_ = (AbstractDocument) styledDoc;
        } else {
            System.err.println("Text pane's document isn't an AbstractDocument!");
            System.exit(-1);
        }
        iniTestText();
        rmestore_ = new RuleMarkerEntryStorage();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jToolBar1 = new javax.swing.JToolBar();
        LabelID = new javax.swing.JLabel();
        jLabelFindingIDSelected = new javax.swing.JLabel();
        LabelSpcae1 = new javax.swing.JLabel();
        jButtonPreviousFindingID = new javax.swing.JButton();
        LabelSpace2 = new javax.swing.JLabel();
        jLabelSelectDataTable = new javax.swing.JLabel();
        LabelSpace3 = new javax.swing.JLabel();
        jTextFieldFindingId = new javax.swing.JTextField();
        LabelSpace4 = new javax.swing.JLabel();
        jButtonNextFindingID = new javax.swing.JButton();
        LabelSpace5 = new javax.swing.JLabel();
        jButtonQueryFindingID = new javax.swing.JButton();
        jLabelDeleteQuery = new javax.swing.JLabel();
        jButtonSelectFindingId = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldEvaluationT = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldEvaluationN = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldEvaluationM = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldEvaluationG = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldEvaluationR = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldEvaluationL = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldEvaluationV = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldEvaluationICD10 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldEvaluationICDO = new javax.swing.JTextField();
        jButtonSaveEvaluation = new javax.swing.JButton();
        jTextFieldEvaluationCommand = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabelTStaging = new javax.swing.JLabel();
        jLabelNStaging = new javax.swing.JLabel();
        jLabelMStaging = new javax.swing.JLabel();
        jLabelGStaging = new javax.swing.JLabel();
        jLabelRStaging = new javax.swing.JLabel();
        jLabelLStaging = new javax.swing.JLabel();
        jLabelVStaging = new javax.swing.JLabel();
        jLabelICD10 = new javax.swing.JLabel();
        jLabelICDO = new javax.swing.JLabel();

        jToolBar1.setRollover(true);

        LabelID.setText("ID: ");
        jToolBar1.add(LabelID);
        jToolBar1.add(jLabelFindingIDSelected);

        LabelSpcae1.setText("          ");
        jToolBar1.add(LabelSpcae1);

        jButtonPreviousFindingID.setText("<");
        jButtonPreviousFindingID.setFocusable(false);
        jButtonPreviousFindingID.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonPreviousFindingID.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonPreviousFindingID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonPreviousFindingIDMouseClicked(evt);
            }
        });
        jToolBar1.add(jButtonPreviousFindingID);

        LabelSpace2.setText("    ");
        jToolBar1.add(LabelSpace2);

        jLabelSelectDataTable.setText("Finding ID");
        jLabelSelectDataTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelSelectDataTableMouseClicked(evt);
            }
        });
        jToolBar1.add(jLabelSelectDataTable);

        LabelSpace3.setText(":  ");
        jToolBar1.add(LabelSpace3);

        jTextFieldFindingId.setMaximumSize(new java.awt.Dimension(120, 25));
        jTextFieldFindingId.setPreferredSize(new java.awt.Dimension(120, 25));
        jToolBar1.add(jTextFieldFindingId);

        LabelSpace4.setText("    ");
        jToolBar1.add(LabelSpace4);

        jButtonNextFindingID.setText(">");
        jButtonNextFindingID.setFocusable(false);
        jButtonNextFindingID.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonNextFindingID.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonNextFindingID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonNextFindingIDMouseClicked(evt);
            }
        });
        jToolBar1.add(jButtonNextFindingID);

        LabelSpace5.setText("        ");
        jToolBar1.add(LabelSpace5);

        jButtonQueryFindingID.setText("Query");
        jButtonQueryFindingID.setFocusable(false);
        jButtonQueryFindingID.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonQueryFindingID.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonQueryFindingID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonQueryFindingIDActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonQueryFindingID);
        jToolBar1.add(jLabelDeleteQuery);

        jButtonSelectFindingId.setText("Select");
        jButtonSelectFindingId.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonSelectFindingId.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonSelectFindingId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelectFindingIdActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonSelectFindingId);

        jTextPane1.setAlignmentY(0.0F);
        jTextPane1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jTextPane1.setName(""); // NOI18N
        jScrollPane1.setViewportView(jTextPane1);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Evaluation"));

        jLabel1.setText("T:");

        jLabel2.setText("N:");

        jLabel3.setText("M:");

        jLabel4.setText("G:");

        jLabel5.setText("R:");

        jLabel6.setText("L:");

        jLabel7.setText("V:");

        jLabel8.setText("ICD-10:");

        jLabel9.setText("ICD-O:");

        jButtonSaveEvaluation.setText("Save");
        jButtonSaveEvaluation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveEvaluationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldEvaluationT, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldEvaluationN, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldEvaluationM, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldEvaluationG, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldEvaluationR, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldEvaluationL, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldEvaluationV, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldEvaluationICD10, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldEvaluationICDO, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonSaveEvaluation))
            .addComponent(jTextFieldEvaluationCommand)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(jTextFieldEvaluationICD10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)
                        .addComponent(jButtonSaveEvaluation)
                        .addComponent(jTextFieldEvaluationICDO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jTextFieldEvaluationV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(jTextFieldEvaluationL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jTextFieldEvaluationR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jTextFieldEvaluationG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jTextFieldEvaluationM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jTextFieldEvaluationN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jTextFieldEvaluationT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTextFieldEvaluationCommand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("SAAT Tool"));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabelTStaging.setText("T:");
        jLabelTStaging.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelTStagingMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 5.0;
        jPanel2.add(jLabelTStaging, gridBagConstraints);

        jLabelNStaging.setText("N:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 5.0;
        jPanel2.add(jLabelNStaging, gridBagConstraints);

        jLabelMStaging.setText("M:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 5.0;
        jPanel2.add(jLabelMStaging, gridBagConstraints);

        jLabelGStaging.setText("G:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 5.0;
        jPanel2.add(jLabelGStaging, gridBagConstraints);

        jLabelRStaging.setText("R:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 5.0;
        jPanel2.add(jLabelRStaging, gridBagConstraints);

        jLabelLStaging.setText("L:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 5.0;
        jPanel2.add(jLabelLStaging, gridBagConstraints);

        jLabelVStaging.setText("V:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 5.0;
        jPanel2.add(jLabelVStaging, gridBagConstraints);

        jLabelICD10.setText("ICD-10:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        jPanel2.add(jLabelICD10, gridBagConstraints);

        jLabelICDO.setText("ICD-O:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        jPanel2.add(jLabelICDO, gridBagConstraints);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 908, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jLabelSelectDataTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelSelectDataTableMouseClicked
        int index = tabel_id_selection_.indexOf(jLabelSelectDataTable.getText());
        if (index < tabel_id_selection_.size() - 1) {
            jLabelSelectDataTable.setText(tabel_id_selection_.get(index + 1).toString());
        } else {
            jLabelSelectDataTable.setText(tabel_id_selection_.get(0).toString());
        }
    }//GEN-LAST:event_jLabelSelectDataTableMouseClicked

    private void jButtonSelectFindingIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelectFindingIdActionPerformed
        if (jTextFieldFindingId.getText().equalsIgnoreCase("")) {
            return;
        }
        de_ = rmestore_.load(Integer.parseInt(jTextFieldFindingId.getText()), this.jLabelSelectDataTable.getText());
        setDiseaseEntryGui();
    }//GEN-LAST:event_jButtonSelectFindingIdActionPerformed

    private void jLabelTStagingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelTStagingMouseClicked
        System.out.println("T Staging Element berechnen");
        ParserStagingT p = new ParserStagingT();
        de_.preparedTextForStaging();
        p.setUp(de_.textCleaned);
        p.setDebug(true);
        ArrayList result = p.ruleMarkerMatcher();
        String[] original = de_.textOriginal.split("\\s");
        String[] cleand = de_.textCleaned.split("\\s");
        jTextPane1.setText("");
        for(int i = 0; i < original.length; i++) {     
            if(cleand.length < i) {
                addColoredText(original[i], Color.BLUE, false, false, false, false);
                continue;
            }
            if(original[i].equalsIgnoreCase(cleand[i])){
                addColoredText(original[i], Color.BLACK, false, false, false, false);
            } else {
                addColoredText(original[i], Color.LIGHT_GRAY, false, false, false, true);
            }
            addColoredText(" ", Color.BLUE, false, false, false, false);
        }
        for(Object s : result) {
            reColorText(s.toString(), Color.RED, false, false, false, false);
        }
    }//GEN-LAST:event_jLabelTStagingMouseClicked

    private void jButtonQueryFindingIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonQueryFindingIDActionPerformed
        if(query_window_ == null) {
            query_window_ = new QueryWindow(this);    
        }
        query_window_.setVisible(true);
    }//GEN-LAST:event_jButtonQueryFindingIDActionPerformed

    private void jButtonPreviousFindingIDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonPreviousFindingIDMouseClicked
        if(disease_entrys_ == null) {
            if(jTextFieldFindingId.getText().length() != 0) {
                de_ = rmestore_.load(Integer.parseInt(jTextFieldFindingId.getText())-1, this.jLabelSelectDataTable.getText());
                setDiseaseEntryGui();
                jTextFieldFindingId.setText(String.valueOf(de_.id));
            }
        } else {
            int i = disease_entrys_.indexOf(de_);
            if(i>0) {
                de_ = disease_entrys_.get(i--);
                jTextFieldFindingId.setText(String.valueOf(de_.id));
                query_window_.setVisible(false);
                setDiseaseEntryGui();
                jLabelDeleteQuery.setText("X");
                jLabelDeleteQuery.setForeground(Color.RED);
            }
        }
    }//GEN-LAST:event_jButtonPreviousFindingIDMouseClicked

    private void jButtonNextFindingIDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonNextFindingIDMouseClicked
        if(disease_entrys_ == null) {
            if(jTextFieldFindingId.getText().length() != 0) {
                de_ = rmestore_.load(Integer.parseInt(jTextFieldFindingId.getText())+1, this.jLabelSelectDataTable.getText());
                setDiseaseEntryGui();
                jTextFieldFindingId.setText(String.valueOf(de_.id));
            }
        } else {
            int i = disease_entrys_.indexOf(de_);
            System.out.println(i);
            if(i < disease_entrys_.size()) {
                int ip = i + 1;
                System.out.println(ip);
                de_ = disease_entrys_.get(ip);
                jTextFieldFindingId.setText(String.valueOf(de_.id));
                query_window_.setVisible(false);
                setDiseaseEntryGui();
                jLabelDeleteQuery.setText("X");
                jLabelDeleteQuery.setForeground(Color.RED);
            }
        }
    }//GEN-LAST:event_jButtonNextFindingIDMouseClicked

    private void jButtonSaveEvaluationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveEvaluationActionPerformed
        if(ee_ == null) {
            ee_ = new EvaluationEntry();
            ee_.table_ = de_.type_;
            ee_.id = de_.id;
            ee_.addOldStaging("T", jTextFieldEvaluationT.getText());
            ee_.addOldStaging("N", jTextFieldEvaluationN.getText());
            ee_.addOldStaging("M", jTextFieldEvaluationM.getText());
            ee_.addOldStaging("G", jTextFieldEvaluationG.getText());
            ee_.addOldStaging("R", jTextFieldEvaluationR.getText());
            ee_.addOldStaging("L", jTextFieldEvaluationL.getText());
            ee_.addOldStaging("V", jTextFieldEvaluationV.getText());
            ee_.setICD10(jTextFieldEvaluationICD10.getText());
            ee_.setICDO(jTextFieldEvaluationICDO.getText());
            ee_.setCommand(jTextFieldEvaluationCommand.getText());
            rmestore_.insertEvaluation(ee_);
        } else {
            ee_.addOldStaging("T", jTextFieldEvaluationT.getText());
            ee_.addOldStaging("N", jTextFieldEvaluationN.getText());
            ee_.addOldStaging("M", jTextFieldEvaluationM.getText());
            ee_.addOldStaging("G", jTextFieldEvaluationG.getText());
            ee_.addOldStaging("R", jTextFieldEvaluationR.getText());
            ee_.addOldStaging("L", jTextFieldEvaluationL.getText());
            ee_.addOldStaging("V", jTextFieldEvaluationV.getText());
            ee_.setICD10(jTextFieldEvaluationICD10.getText());
            ee_.setICDO(jTextFieldEvaluationICDO.getText());
            ee_.setCommand(jTextFieldEvaluationCommand.getText());
            rmestore_.updateEvaluation(ee_);
        }
    }//GEN-LAST:event_jButtonSaveEvaluationActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelID;
    private javax.swing.JLabel LabelSpace2;
    private javax.swing.JLabel LabelSpace3;
    private javax.swing.JLabel LabelSpace4;
    private javax.swing.JLabel LabelSpace5;
    private javax.swing.JLabel LabelSpcae1;
    private javax.swing.JButton jButtonNextFindingID;
    private javax.swing.JButton jButtonPreviousFindingID;
    private javax.swing.JButton jButtonQueryFindingID;
    private javax.swing.JButton jButtonSaveEvaluation;
    private javax.swing.JButton jButtonSelectFindingId;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelDeleteQuery;
    private javax.swing.JLabel jLabelFindingIDSelected;
    private javax.swing.JLabel jLabelGStaging;
    private javax.swing.JLabel jLabelICD10;
    private javax.swing.JLabel jLabelICDO;
    private javax.swing.JLabel jLabelLStaging;
    private javax.swing.JLabel jLabelMStaging;
    private javax.swing.JLabel jLabelNStaging;
    private javax.swing.JLabel jLabelRStaging;
    private javax.swing.JLabel jLabelSelectDataTable;
    private javax.swing.JLabel jLabelTStaging;
    private javax.swing.JLabel jLabelVStaging;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldEvaluationCommand;
    private javax.swing.JTextField jTextFieldEvaluationG;
    private javax.swing.JTextField jTextFieldEvaluationICD10;
    private javax.swing.JTextField jTextFieldEvaluationICDO;
    private javax.swing.JTextField jTextFieldEvaluationL;
    private javax.swing.JTextField jTextFieldEvaluationM;
    private javax.swing.JTextField jTextFieldEvaluationN;
    private javax.swing.JTextField jTextFieldEvaluationR;
    private javax.swing.JTextField jTextFieldEvaluationT;
    private javax.swing.JTextField jTextFieldEvaluationV;
    private javax.swing.JTextField jTextFieldFindingId;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables

    private void addColoredText(String text, Color color, boolean bold, boolean italic, boolean underline, boolean strike_through) {
        try {
            SimpleAttributeSet attrs = new SimpleAttributeSet();
            StyleConstants.setForeground(attrs, color);
            StyleConstants.setBold(attrs, bold);
            StyleConstants.setItalic(attrs, italic);
            StyleConstants.setUnderline(attrs, underline);
            StyleConstants.setStrikeThrough(attrs, strike_through);
            doc_.insertString(doc_.getLength(), text, attrs);
        } catch (BadLocationException ex) {
            Logger.getLogger(QuerySearch.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void reColorText(String text, Color color, boolean bold, boolean italic, boolean underline, boolean strike_through) {
        try {
            SimpleAttributeSet attrs = new SimpleAttributeSet();
                StyleConstants.setForeground(attrs, color);
                StyleConstants.setBold(attrs, bold);
                StyleConstants.setItalic(attrs, italic);
                StyleConstants.setUnderline(attrs, underline);
                StyleConstants.setStrikeThrough(attrs, strike_through);
                String t = doc_.getText(0, doc_.getLength());
                int len = t.length();
                int start = t.indexOf(text);
                int end = t.indexOf(text)+text.length();
                doc_.replace(start, text.length(), text, attrs);
        } catch (BadLocationException ex) {
            Logger.getLogger(QuerySearch.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void iniTestText() {
        try {
            SimpleAttributeSet attrs = new SimpleAttributeSet();
            StyleConstants.setForeground(attrs, Color.red);
            String newline = "\n";
            doc_.insertString(doc_.getLength(), "alalalalal" + newline, attrs);
            StyleConstants.setForeground(attrs, Color.green);
            doc_.insertString(doc_.getLength(), "green" + newline, attrs);
            StyledEditorKit sek = new StyledEditorKit();
            doc_.replace(3, 5, "bbibibibib", attrs);
        } catch (BadLocationException ex) {
            Logger.getLogger(QuerySearch.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void selectWithQuery(String query) {
        //System.out.println(query);
        disease_entrys_ = rmestore_.load(query);
        if(disease_entrys_.size() == 0) {
            disease_entrys_ = null;
            return;
        }
        de_ = disease_entrys_.get(0);
        jTextFieldFindingId.setText(String.valueOf(de_.id));
        query_window_.setVisible(false);
        setDiseaseEntryGui();
        jLabelDeleteQuery.setText("X");
        jLabelDeleteQuery.setForeground(Color.RED);
    }
    
    private void setDiseaseEntryGui() {
        jTextPane1.setText(de_.textOriginal);
        jLabelFindingIDSelected.setText(String.valueOf(de_.id));
        jLabelTStaging.setText("T: " + de_.getStaging("T"));
        jLabelNStaging.setText("N: " + de_.getStaging("N"));
        jLabelMStaging.setText("M: " + de_.getStaging("M"));
        jLabelGStaging.setText("G: " + de_.getStaging("G"));
        jLabelRStaging.setText("R: " + de_.getStaging("R"));
        jLabelLStaging.setText("L: " + de_.getStaging("L"));
        jLabelVStaging.setText("V: " + de_.getStaging("V"));
        jLabelICD10.setText("ICD-10: " + de_.getICD10());
        jLabelICDO.setText("ICD-O: " + de_.getICDO());
        ee_ = rmestore_.loadEvaluationData(de_.id, de_.type_);
        setEvaluationGui();
    }
    
    private void setEvaluationGui() {
        if(ee_ == null) {
            jTextFieldEvaluationT.setText("");
            jTextFieldEvaluationN.setText("");
            jTextFieldEvaluationM.setText("");
            jTextFieldEvaluationG.setText("");
            jTextFieldEvaluationR.setText("");
            jTextFieldEvaluationL.setText("");
            jTextFieldEvaluationV.setText("");
            jTextFieldEvaluationICD10.setText("");
            jTextFieldEvaluationICDO.setText("");
            jTextFieldEvaluationCommand.setText("");
        } else {
            jTextFieldEvaluationT.setText(ee_.getStaging("T"));
            jTextFieldEvaluationN.setText(ee_.getStaging("N"));
            jTextFieldEvaluationM.setText(ee_.getStaging("M"));
            jTextFieldEvaluationG.setText(ee_.getStaging("G"));
            jTextFieldEvaluationR.setText(ee_.getStaging("R"));
            jTextFieldEvaluationL.setText(ee_.getStaging("L"));
            jTextFieldEvaluationV.setText(ee_.getStaging("V"));
            jTextFieldEvaluationICD10.setText(ee_.getICD10());
            jTextFieldEvaluationICDO.setText(ee_.getICDO());
            jTextFieldEvaluationCommand.setText(ee_.getCommand());
        }
    }
}
